; -*- mode: clojure; -*-
; vim: filetype=clojure
(include "includes/system")
(include "includes/app")
(require '[includes.system.disk :as disk]) ; le ' devant est que dans ce fichier
(require '[includes.system.check :as check]) ; le ' devant est que dans ce fichier
(require '[includes.system.process :as system]) ; le ' devant est que dans ce fichier
(require '[includes.app.elasticsearch :as elasticsearch]) ; le ' devant est que dans ce fichier
(require '[includes.app.app_kafka :as app_kafka]) ; le ' devant est que dans ce fichier
(require '[includes.app.web :as web]) ; le ' devant est que dans ce fichier
(require '[includes.system.riemann :as riemann]) ; le ' devant est que dans ce fichier

(logging/init {:file "/var/log/riemann/riemann.log"})

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "0.0.0.0"]
  (tcp-server {:host host})
  (udp-server {:host host})
  (ws-server  {:host host}))

; Expire old events from the index every 5 seconds.
(periodically-expire 5)

;(streams
;  (where (and (service "disk_percent")
;              ( > (:metric event) 80)) 
;         (by [:host]
;             (throttle 1 30
;                   #(info %)))))
;; by = creation de sous stream !

(streams
(expired #(info "Expired event" %))
 (where (not (expired? event))
  disk/check-disk
  system/process-critical
  riemann/show-riemann
  app_kafka/topic-msg-in-per-sec
  web/web
  check/check-threshold
  elasticsearch/elasticsearch-document-count-rate
))

